#include<stdio.h>
int main()
{
    int n,i,j,k;
    int a[5000]={0};
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]==a[j])
            {
                for(k=j;k<n-1;k++)
                    a[k]=a[k+1];
                n--;
                j--;
            }
        }
    }
    for(i=0;i<n;i++)
    {
        if(a[i]!=0)
            printf("%d ",a[i]);
    }
    return 0;
}

#include<stdio.h>
int main()
{
    int n,i,j=0,num;
    int a[50]={0};
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&num);
   for(i=0;i<n;i++)
   {
       if(a[i]!=num)
           a[j++]=a[i];
   }
    for(i=0;i<j;i++)
        printf("%d ",a[i]);
    return 0;
}

/*#include<stdio.h>
int main()
{
    long long n,m;
    scanf("%lld %lld",&n,&m);
    long long maxdnum=n>m?m:n;
    long long mindnum=n>m?n:m;
    for(long long i=maxdnum;i>0;i--)
    {
        if(n%i==0&&m%i==0)
        {
            maxdnum=i;
            break;
        }
    }
    for(long long i=mindnum;;i++)
    {
        if(i%n==0&&i%m==0)
        {
            mindnum=i;
            break;
        }
    }
    printf("%lld",maxdnum+mindnum);
    return 0;
}//暴力求解
*/
#include<stdio.h>
long long mulsub(long long x,long long y)
{
    long long max=x>y?x:y;
    long long min=x>y?y:x;
    long long temp;
    while(temp=max-min)
    {
        if(temp>min)
            max=temp;
        else
        {
            max=min;
            min=temp;
        }
    }
    return max;
}//更相减损术
int main()
{
    long long n,m,temp,max,min,ret1,ret2;
    scanf("%lld %lld",&n,&m);
    max=mulsub(n,m);
    ret1=n>m?n:m;
    ret2=n>m?m:n;
    while(temp=n%m)
    {
        n=m;
        m=temp;
    }
    //max=m;
    min=ret1*ret2/max;
    printf("%lld",max+min);
    return 0;
}//辗转相除法

#include<stdio.h>
#include<stdlib.h>
int main()
{
    int n,temp;
    scanf("%d",&n);
    int p[1001]={};
    for(int i=0;i<1001;i++)
    {
        scanf("%d",&temp);
        p[temp]=temp;
    }
    for(int i=0;i<1001;i++)
    {
        if(p[i])
            printf("%d ",p[i]);
    }
}