#include<stdio.h>
#include<math.h>
int reverse(int n)
{
    int ret=0;
    while(n)
    {
        ret*=10;
        ret+=n%10;
        n/=10;
    }
//     int ret=n,count=1,sum=0,i=1;
//     while(ret/=10)
//     {
//         count++;
//     }
//     while(n)
//     {
//         sum+=n%10*pow(10,count-i);
//         i++;
//         n/=10;
//     }
//     return sum;
    return ret;
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        if(i==reverse(i))
            printf("%d\n",i);
    }
    return 0;
}
#include<stdio.h>
int main()
{
    int n,x;
    int count=0;
    scanf("%d %d",&n,&x);
    for(int i=1;i<=n;i++)
    {
        int ret=i;
        while(ret)
        {
            if(ret%10==x)
                count++;
            ret/=10;
        }
    }
    printf("%d",count);
    return 0;
}
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int n,count=0;
    scanf("%d",&n);
    int x=0,y=n;
//二级指针
//     int**pf=(int**)malloc(sizeof(int*)*n);
//     for(int i=0;i<n;i++)
//         pf[i]=(int*)malloc(sizeof(int)*n);
    int(*p)[n]=(int*)malloc(sizeof(int)*n*n); 
    while(count<n*n)
    {
        for(int i=x;i<y;i++)
            p[x][i]=++count;
        for(int i=x+1;i<y;i++)
            p[i][y-1]=++count;
        for(int i=y-2;i>=x;i--)
            p[y-1][i]=++count;
        for(int i=y-2;i>x;i--)
            p[i][x]=++count;
        x++;
        y--;
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
            printf("%d ",p[i][j]);
        printf("\n");
    }
    return 0;
}
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int n;
    scanf("%d",&n);
    int(*p)[n]=(int*)malloc(sizeof(int)*n*n);
    int count=0,x=0,y=n;
    while(count<n*n)
    {
        for(int i=x;i<y;i++)
            p[x][i]=++count;
        for(int i=x+1;i<y;i++)
            p[i][y-1]=++count;
        for(int i=y-2;i>=x;i--)
            p[y-1][i]=++count;
        for(int i=y-2;i>x;i--)
            p[i][x]=++count;
        x++;
        y--;
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
            printf("%d ",p[i][j]);
        printf("\n");
    }
    return 0;
}