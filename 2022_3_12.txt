#include<stdio.h>
#include<math.h>
#include<stdbool.h>
#include<stdlib.h>
int Getnum(int n)
{
	int count = 1;
	while (n /= 10)
	{
		count++;
	}
	return count;
}
int Getone(int n, int p)
{
	return (int)(n / pow(10, p - 1)) % 10;
}
int Reverse(int n)
{
	if (Getnum(n) == 1)
		return n;
	int sum = 0;
	for (int i = 1; i <= Getnum(n); i++)
		sum += Getone(n, i)*pow(10, Getnum(n) - i);
	return sum;
}
bool Judge(int n)
{
	if (n == Reverse(n))
		return true;
	else
		return false;
}
int* Add_N(int num)
{
	int i_num = Getnum(num);
	int*p = NULL;
	p = realloc(p, i_num + 1);
	for (int i = 1; i <= Getnum(num) + 1; i++)
		p[i - 1] = Getone(num, i) + Getone(Reverse(num), i);
	return p;
}
int Get_a_n(int N, int*p, int count)
{
	int forword = 0;
	int sum = 0;
	for (int i = 0; i <= count; i++)
	{
		int ret = p[i];
		p[i] = (p[i] + forword) % N;
		forword = ret / N;
		sum += p[i] * pow(10, i);
	}
	return sum;
}
int main()
{
	int N, M;
	scanf("%d %d", &N, &M);
	if (N > 10)
		N -= 64;
	int step = 0;
	while (step++ <= 30)
	{
		int ret = Get_a_n(N, Add_N(M), Getnum(M));
		M = ret;
		if (Judge(M))
		{
			printf("STEP=%d", step);
			return 0;
		}
	}
	printf("Impossible!");
	return 0;
}
//半吊子回文数，运算实现，其错误暂未纠正
